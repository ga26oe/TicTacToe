/* CSS reset */
*,
*::before,
*::after {
  box-sizing: border-box;
}
* {
  margin: 0;
  padding: 0;
}
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}
input,
button,
textarea,
select {
  font: inherit;
}
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

:root {
  --webPageColor: #1e1e1e;
  --square: #2a2a2a;
  --textColor: #e3e3e3;
  --xColor: #f95959;
  --oColor: #59f9b2;
  --boardColor: #455d7a;
  --hoverColor: #344861;
  --refreshButton: #e64545;
  --typeWriterCursor: #e64545;
}

body {
  background-color: var(--webPageColor);
  color: var(--textColor);
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -60%);
  font-family: monospace;
}

.typewriterHeader h1 {
  color: var(--textColor);
  font-family: monospace;
  overflow: hidden; /* Ensures the content is not revealed until the animation */
  border-right: 0.15em solid orange; /* The typewriter cursor */
  white-space: nowrap; /* Keeps the content on a single line */
  margin: 0 auto; /* Gives that scrolling effect as the typing happens */
  letter-spacing: 0.15em; /* Adjust as needed */
  animation: typing 3.5s steps(30, end), blink-caret 0.5s step-end infinite;
}

/* The typing effect */
@keyframes typing {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

/* The typewriter cursor effect */
@keyframes blink-caret {
  from,
  to {
    border-color: transparent;
  }
  50% {
    border-color: var(--typeWriterCursor);
  }
}

.game-container {
  text-align: center;
  font-family: Arial, sans-serif;
  display: flex;
  flex-direction: column;
  justify-content: center;
}
.board {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 0.8rem;
  margin: 20px auto;
  width: 310px;
}

.cell {
  width: 100px;
  height: 100px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 3rem;
  cursor: pointer;
  background-color: var(--square);
  border-radius: 1rem;
  border: none;
  color: var(--xColor);
  border: 2px solid transparent;
  transition: all 0.3s ease;
}
.cell.taken.x {
  color: var(--xColor);
  border: none;
}

.cell.taken.o {
  color: var(--oColor);
  border: none;
}

.cell:hover {
  border-color: #3498db;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  transform: scale(1.05);
}
#status {
  font-family: monospace;
}
#refreshButton {
  display: inline-block;
  background-color: var(--xColor);

  color: var(--textColor);
  border: none;
  cursor: pointer;
  width: 30%;
  padding: 0.5rem;
  translate: (60%, 50%);
  font-family: monospace;
  font-size: 0.8rem;
  border-radius: 0.5rem;

  transition: background-color 0.3 ease;
  margin: 20px auto; /* Centers the button horizontally */
}

.btnContainer {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  gap: 5px;
  transition: all 0.3s ease;
}

.btnText {
  font-family: monospace;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.5s ease, visibility 0.5s ease, transform 0.5s ease;
  transform: translateX(-10px); /* Start slightly off position */
  white-space: nowrap; /* Ensures the text stays on a single line */
  color: var(--textColor); /* Customize the color if needed */
}

svg {
  transition: transform 0.5s ease, fill 0.5s ease;
}

#refreshButton:hover .btnContainer svg {
  transform: rotate(360deg);
  /* translate: -50px; */
}
#refreshButton:hover .btnContainer {
  transform: scale(1.1); /* Slightly scale the container on hover */
}
#refreshButton:hover .btnText {
  opacity: 1;
  visibility: visible;
  margin-left: 8px; /* Adds space between the SVG and the text */
}
